---
import { getPosts, getPost } from '../../utils/sanity';
import type { InferGetStaticParamsType } from 'astro';
import { PortableText } from '~/components/PortableText/PortableText';
import Layout from '../_layout.astro';
import { Heading } from '~/components/Heading';
// import Hero from '~/components/Hero.astro';
import { Container } from '~/components/Container';

// TODO: not implemented yet
// return Astro.redirect('/');

export async function getStaticPaths() {
  const posts = await getPosts({
    preview: false,
  });
  return posts.map((post) => ({
    params: { slug: post.slug },
  }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params;

const post = await getPost({
  preview: Astro.locals.preview,
  options: Astro.locals.loadQueryOptions,
  slug,
});

if (!post) {
  return new Response(null, {
    status: 404,
    statusText: 'Post Not found',
  });
}

const { title, body, tags, image } = post;
---

<Layout>
  <article>
    <Container
      >{
        title ? (
          <Heading level="h1" className="text-center">
            {title}
          </Heading>
        ) : null
      }</Container
    >
    <!-- <Hero>
      {
        image?.image ? (
          <SanityImage
            src={image.image}
            width={1440}
            height={600}
            loading="eager"
            className="object-cover h-[600px] w-full"
          />
        ) : null
      }

      <Container className="py-14 flex flex-col items-center max-w-3xl">
        <p
          class="w-fit px-4 py-1 text-xs md:text-sm uppercase tracking-wider bg-primary dark:bg-background dark:text-primary text-white rounded-full mb-4"
        >
          Blog
        </p>
        {
          title ? (
            <Heading level="h1" className="text-center">
              {title}
            </Heading>
          ) : null
        }
        {
          tags && tags.length > 0 ? (
            <ul class="flex items-center space-x-4 mt-6">
              {tags.map((tag) => (
                <li>
                  <a href={`/${tag.slug}`}>{tag.title}</a>
                </li>
              ))}
            </ul>
          ) : null
        }</Container
      ></Hero
    > -->
    <Container className="prose max-w-3xl py-24">
      {body ? <PortableText portableText={body} client:visible /> : null}
    </Container>
  </article>
</Layout>
