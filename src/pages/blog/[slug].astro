---
import { getPosts, getPost } from '../../utils/sanity';
import type { InferGetStaticParamsType } from 'astro';
import { PortableText } from '~/components/PortableText/PortableText';
import Layout from '../_layout.astro';
import { Heading } from '~/components/Heading';
import { TableOfContents } from '~/components/TableOfContents';
import { Container } from '~/components/Container';
// import { GridBackground, Spotlight } from '~/components/blocks/spotlight-new';
import { Hero } from '~/components/Hero';

export async function getStaticPaths() {
  const posts = await getPosts({
    preview: false,
  });
  return posts.map((post) => ({
    params: { slug: post.slug },
  }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params;

const post = await getPost({
  preview: Astro.locals.preview,
  options: Astro.locals.loadQueryOptions,
  slug,
});

if (!post) {
  return new Response(null, {
    status: 404,
    statusText: 'Post Not found',
  });
}

const { title, excerpt, body, tags, image, toc } = post;
---

<Layout>
  <article>
    <Hero client:visible>
      <div
        class="z-60 col-span-12 w-full space-y-3 text-lg leading-6 [&_p]:font-light [&_p]:text-zinc-500! sm:[&_p]:text-xl lg:[&_p]:text-2xl dark:[&_p]:text-foreground"
      >
        {
          title ? (
            <Heading level="h1" className="text-center">
              {title}
            </Heading>
          ) : null
        }
        {
          excerpt ? (
            <p class="mx-auto max-w-3xl text-center text-zinc-500">{excerpt}</p>
          ) : null
        }
      </div>
    </Hero>
    <Container
      className="prose flex max-w-5xl gap-8 py-14 prose-zinc dark:prose-invert prose-a:text-primary prose-a:no-underline hover:prose-a:underline"
    >
      {Array.isArray(toc) && <TableOfContents toc={toc} client:visible />}
      {
        body ? (
          <section class="order-1 pt-10 pb-24 *:*:first:mt-0!">
            <PortableText portableText={body} blog client:visible />
          </section>
        ) : null
      }
    </Container>
  </article>
</Layout>
