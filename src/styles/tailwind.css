@import 'tailwindcss';

@config '../../tailwind.config.mjs';

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@theme {
  --color-orange-*: initial;
  --color-amber-*: initial;
  --color-yellow-*: initial;
  --color-lime-*: initial;
  --color-teal-*: initial;
  --color-cyan-*: initial;
  --color-sky-*: initial;
  --color-blue-*: initial;
  --color-violet-*: initial;
  --color-purple-*: initial;
  --color-pink-*: initial;
  --color-emerald-*: initial;
  --color-neutral-*: initial;
  --color-slate-*: initial;
  --color-fuchsia-*: initial;
  --color-rose-*: initial;
  --color-stone-*: initial;
}

@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@utility bg-glass {
  /* --background: 0 0% 7%; */
  --tw-bg-opacity: 0.05;
  background-color: hsla(var(--background) / var(--tw-bg-opacity));
  @apply backdrop-blur-md;
  .dark & {
    --background: 0 0% 50%;
    /* --tw-bg-opacity: 0.2; */
  }
}

@utility container-inline-size {
  container-type: inline-size;
}

@utility fade-in {
  @apply transition-opacity duration-500 starting:opacity-0;
}

@utility marquee {
  --speed: 20s;
  --item-gap: 0.5rem;
  --single-slide-speed: calc(var(--speed) / var(--num-items));
  --item-width-plus-gap: calc(var(--item-width) + var(--item-gap));
  --track-width: calc(var(--item-width-plus-gap) * calc(var(--num-items) - 1));

  @apply overflow-hidden;
}

@utility track {
  @apply container-inline-size w-max;
  display: grid;
  grid-template-columns: var(--track-width) [track] 0px [resting];
}

@utility track-item {
  grid-area: resting;
  width: var(--item-width);

  /* TODO: check user motion preferences */
  @apply animate-marquee;
  animation-delay: calc(var(--single-slide-speed) * var(--item-position) * -1);
}

@utility track-item-content {
  @apply h-10 w-full px-4 md:h-12 md:px-8;

  animation-delay: calc(var(--single-slide-speed) * var(--item-position) * -1);

  /* & > * {
      @apply block w-full h-full;
    } */
}

@utility fadeout-horizontal {
  mask-image: linear-gradient(
    to right,
    transparent,
    black var(--fade-size, 15%),
    black calc(100% - var(--fade-size, 15%)),
    transparent
  );
}

@layer base {
  :root {
    --background: 0 0% 98%;
    --foreground: 0 0% 7%;
    --muted: 240deg 3.83% 46.08%;
    /* --primary: 0 92% 62%; */
    --primary: 243 75% 59%;
    --accent: 46 62% 50%;
    --border: var(--muted);
    --primary-dark: 0 92% 15%;
    --destructive: 0 92% 62%;
    --destructive-light: 0 92% 80%;
    --positive: 120 100% 25%;
    --positive-light: 120 100% 80%;
  }

  .dark {
    --background: 0 0% 7%;
    --foreground: 0 0% 98%;
    /* --accent: 46 62% 50%; */
  }
  body {
    color: hsl(var(--foreground));
  }
  img {
    @apply block h-auto w-full max-w-full;
  }
  .prose {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      &:not(:first-child) {
        @apply mt-16;
      }
      & + * {
        @apply mt-8;
      }
    }
    p {
      & + * {
        @apply mt-6;
      }
    }
  }
}
